#!/bin/bash -e

# Script directory
BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

usage() {
    echo "Usage: shsub [-h] -i ID -o OUT command [args]"
    echo ""
    echo "Run a command in background. Outpus the PID of child process."
    echo " -h      : display this message"
    echo " -i ID   : job id"
    echo " -o OUT  : name of the output log file"
    echo " command : the command to execute"
    echo " args    : command argument list"
    exit 1
}

# Option parser
while getopts i:o:h OPT
do
    case $OPT in
        (i)
            ID=$OPTARG
            ;;
        (o)
            OUT=$OPTARG
            ;;
        (h | ?)
            usage
            ;;
    esac
done

# Remove parsed args
N=1
while [[ $N < $OPTIND ]]
do
    shift
    let N+=1
done

# Check for required args
if [ -z "$ID" ] || [ -z "$OUT" ] || [[ $# == 0 ]]
then
    echo Missing arguments ...
    usage
fi

# Child process PID is obtained from shrun through PIPE
# The PID is the stored in PIDFILE
DIR=/tmp/$USER/shpool
PIPE=$DIR/$ID.pipe
PIDFILE=$DIR/$ID.id

# Make sure that job is not running already
if [ -f $PIDFILE ]
then
    echo Job already exists.
    exit 2
fi

# Create PIPE
mkdir -p $DIR
rm -f $PIPE
mkfifo $PIPE

# Execute command using shrun in screen session. Make sure screen is detached
# from the terminal.
screen -d -m -S $ID /bin/sh -c "$BASEDIR/shrun -i $ID -o $OUT $*"

# Read child PID and store it in a file
PID=$(cat $PIPE)
rm -f $PIPE
echo $PID > $PIDFILE
echo $PID
